service: hello-world
frameworkVersion: ">=2.40.0 <3.0.0"

## Using module to load enviornment variables
useDotenv: true

provider:
  name: aws
  runtime: python3.8
  profile: <aws_profile>
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  apiKeys:
    - hello-world-api-key
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "ecr:InitiateLayerUpload"
            - "ecr:SetRepositoryPolicy"
            - "ecr:GetRepositoryPolicy"
          Resource:
            !Join 
              - ':'
              - - 'arn:aws:ecr'
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - 'repository/*'

  stackTags:
    App: ${self:custom.appName}-${self:provider.stage}
    CFStack: ${self:custom.appName}-${self:provider.stage}

  ## Give a custom stack name
  stackName: ${self:provider.stage}-${self:custom.appName}

  ## Define Environment Variables that will be available to Functions
  environment:
    LOG_LEVEL: "INFO"
    STAGE: ${self:provider.stage}

custom:
  appName: hello-world-api
  pythonRequirements:
    dockerizePip: true

package:
  individually: true
  patterns:
    - "!*.txt"
    - "!*.md"
    - "!*.json"
    - "!node_modules/**"
    - "!layers/**"
    - "!resources/**"
    - "!src/**"

functions:
  helloWorld:
    name: ${self:custom.appName}-${self:provider.stage}-hello_world
    description: ${self:custom.appName}-${self:provider.stage}-hello_world
    image: <aws_account_id>.dkr.ecr.<aws_region>.amazonaws.com/hello-world:latest
    timeout: 30
    events: 
    - http:
        path: api/v1/hello-world
        method: get
        cors: true
        private: true

